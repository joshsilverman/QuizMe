#author_dashboard
  #feed_container.span10
    #wrapper.span9
      #feed.row
        #left_column.span3.hidden-phone
          %ul.nav.nav-tabs.nav-stacked
            %li
              .box.top Questions for:
            %li
              %a 
                %span#askers_select= select_tag 'asker', '<option value="0">All</option>'.html_safe + options_from_collection_for_select(Asker.order("twi_screen_name ASC"), :id, :twi_screen_name, @asker.id)
          - if @question_count[1] < 50
            - question_count = ((@question_count[1] || 0) + (@question_count[0] || 0))
            %ul.nav.nav-tabs.nav-stacked
              %li
                .box.top Progress
              %li
                .guidelines 
                  .progress
                    .bar{:style => "width: #{(question_count / 50.0) * 100}%;"}
                  %p
                    - launch_count = question_count >= 50 ? 0 : 50 - question_count
                    - if launch_count > 0
                      #{launch_count} more questions needed to launch.
                    - else
                      Enough questions to launch!
          - if @contributors.present?
            = render :partial => 'feeds/contributors'
        #right_column.span6
          #posts.rounded
            #post_question_modal
              .modal-header
                %h3 
                  Add a Question to
                  %span= "#{@asker.twi_screen_name}"
              .modal-body
                .question_form
                  %h3
                    %i.icon-question-sign
                    Question
                  #question_container
                    %textarea#question_input
                  .answer_area{:style => "display: none;"}
                    %hr

                    %h3
                      %i.icon-info-sign 
                      Answers
                    #answers
                      #canswer
                        .input-prepend.answer
                          %span.add-on
                            %i.icon-ok
                          %input{:type=>"text", :name => 'canswer', :placeholder => 'Correct answer'}>   
                      #ianswer1.ianswer
                        .input-prepend.answer
                          %span.add-on
                            %i.icon-remove
                          %input{:type=>"text", :name => 'ianswer1', :placeholder => 'Incorrect answer'}>
                    %a#add_answer
                      %i.icon-plus
                      Add answer    
                .message.hide
                  Your question was submitted, we'll get in touch when its posted! 
                  %a.post_another Write another â†’
                .modal_conversation_history.hide
                  .conversation
                    .subsidiary.post
                      %i.icon-share-alt{:style => "display: none;"}
                      .content                      
                        = image_tag(@asker.twi_profile_img_url, :class => "rounded") if @asker
                        %h5= "User name"
                        %p= "Conversation history"  
              .modal-footer
                %a#submit_question.btn.btn-primary{:href => "#", "data-loading-text" => "Loading..."} Submit Question
            .header.border-color{style: 'position: relative;'}
              %h3= "Questions"
              - if @requested_user_id
                %a.btn{href: "/askers/#{@asker.id}/questions", style: 'position: absolute; right: 10px; top: 10px;'} Show All
              - else
                %a.btn{href: "/askers/#{@asker.id}/questions/#{current_user.id}", style: 'position: absolute; right: 10px; top: 10px;'} Show Mine
            - @questions.each do |question|
              - owner = (question.user_id == current_user.id)
              .conversation.border-color
                .post.parent.answered{question_id: question.id}
                  %p.time= time_formatter(question.created_at)
                  .status.moderation_type
                    - if question.status == 1
                      %span.label.label-success Approved
                    - elsif question.status == 0
                      %span.label.pending.has-tooltip{:rel => "tooltip", "data-original-title" => 'This question will be reviewed shortly.', "data-placement" => "left"} Pending                      
                    - elsif question.status == -1
                      - if question.inaccurate or question.ungrammatical or question.bad_answers
                        - if question.inaccurate
                          %span.label.label-important Inaccurate
                        - if question.ungrammatical
                          %span.label.label-important Ungrammatical
                        - if question.bad_answers
                          %span.label.label-important Bad Answers                             
                      - else
                        %span.label.label-important Rejected
                  .content
                    = image_tag(question.user.twi_profile_img_url, :class => "rounded")
                    %h5
                      %span= question.user.twi_screen_name  
                    .question
                      - if owner
                        = best_in_place question, :text, :type => :textarea
                      - else
                        %p= question.text.gsub(/<|>/, '').gsub(/@[a-zA-Z0-9_]+ /, '').html_safe
                    - question.answers.sort{|a, b| (b.correct ? 1 : 0)  <=> (a.correct ? 1 : 0) }.each_with_index do |answer, i|
                      %p.answer
                        %i.correct_indicator{:class => (answer.correct ? "icon-ok-sign" : "icon-remove-sign")}
                        - if owner
                          = best_in_place answer, :text, :type => :input
                        - else
                          #{answer.text.gsub(/<|>/, '').gsub(/@[a-zA-Z0-9_]+ /, '').html_safe}
          .pagination-wrapper
            = paginate @questions

= hidden_field_tag :asker_id, @asker.id
/ = hidden_field_tag :question_id, @requested_question.id if @requested_question
= hidden_field_tag :user_id, current_user.id