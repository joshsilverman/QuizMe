:css
  body {background:white;}
  .navbar-inner {box-shadow: 0 1px 3px rgba(0, 0, 0, 0.25), inset 0 -1px 0 rgba(0, 0, 0, 0.1) !important;}
  .navbar-inner .container {width:874px;}
  .asker-row img {height:18px;}
  @media (min-width: 1200px) {.container, .navbar-fixed-top .container, .navbar-fixed-bottom .container {width: 874px;}}

.report

  .page-header
    = image_tag "logo/#{@client.rate_sheet.logo_image}"
    %h2= @client.rate_sheet.title

  %br

  %ul.nav.nav-tabs
    %li.active
      %a{"data-toggle" => "tab", :href => "#overview"} Overview

    %li.dropdown.activity
      %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"} 
        Activity
        %b.caret
      %ul.dropdown-menu.wau-periods
        - i = 0
        - @posts_by_week.each do |w, posts|
          %li
            %a{"data-toggle" => "tab", :href => "#activity", 'data-target' => "#activity-#{w}"}
              = @posts_by_week[w].first.created_at.beginning_of_week.strftime("%m/%d")
              \-
              - if @posts_by_week[w].first.created_at.end_of_week > Date.today
                = end_of_week = 'present'
              - else
                = end_of_week = @posts_by_week[w].first.created_at.end_of_week.strftime("%m/%d")
          - i += 1

    %li.dropdown.people
      %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"} 
        People
        %b.caret
      %ul.dropdown-menu.wau-periods
        - i = 0
        - @posts_by_week.each do |w, posts|
          %li
            %a{"data-toggle" => "tab", :href => "#people", 'data-target' => "#people-#{w}"}
              = @posts_by_week[w].first.created_at.beginning_of_week.strftime("%m/%d")
              \-
              - if @posts_by_week[w].first.created_at.end_of_week > Date.today
                = end_of_week = 'present'
              - else
                = end_of_week = @posts_by_week[w].first.created_at.end_of_week.strftime("%m/%d")
          - i += 1

    %li
      %a{"data-toggle" => "tab", :href => "#invoice"} Billing
    %li
      %a{"data-toggle" => "tab", :href => "#account"} Account

  .tab-content
    #overview.tab-pane.active

      #waus{:style => 'display:none;'}= @waus.to_json
      %h3 
        Weekly Active Users

      #waus_graph.graph

      %br
      %table.table.wau_stats
        %tr
          %th Dates
          %th Active Members
          %th Retweets
          %th Mentions
          %th Total Soc Actions

        - @posts_by_week_by_it.each do |w, posts_by_it|
          - total = retweets = mentions = answers = dms = cts = mentions_excl_answers = 0

          - waus = @posts_by_week_by_user[w].count
          - retweets = posts_by_it[3].count if posts_by_it[3]
          - mentions = posts_by_it[2].count if posts_by_it[2]
          - total = retweets + mentions

          - if @posts_by_week[w].first.created_at.end_of_week > Date.today
            - end_of_week = 'present'
            - inc = true
          - else
            - end_of_week = @posts_by_week[w].first.created_at.end_of_week.strftime("%m/%d")
            - inc = false

          %tr.asker-row{:class => "#{'incomplete' if inc}"}
            %td
              = @posts_by_week[w].first.created_at.beginning_of_week.strftime("%m/%d")
              \-
              = end_of_week
            %td= waus
            %td= retweets
            %td= mentions
            %td= total

    #activity.tab-pane
      - interaction_type = [nil, 'Answer', 'Mention', 'Retweet', 'DM']

      - @posts_by_week.each do |w, posts|
        .wau-period{:id => "activity-#{w}"}

          %h3
            Activity from
            = @posts_by_week[w].first.created_at.beginning_of_week.strftime("%m/%d")
            to
            - if @posts_by_week[w].first.created_at.end_of_week > Date.today
              = end_of_week = 'present'
            - else
              = end_of_week = @posts_by_week[w].first.created_at.end_of_week.strftime("%m/%d")

          %table.table
            %tr
              %th Date
              %th User
              %th Action
              %th Text

              - posts.each_with_index do |post, i|

                %tr.asker-row
                  %td= post.created_at.strftime("%m/%d") #post.interaction_type
                  %td= "@#{post.user.twi_screen_name}"
                  %td= interaction_type[post.interaction_type]
                  %td= post.text

    #people.tab-pane
      - interaction_type = [nil, 'Answer', 'Mention', 'Retweet', 'DM']

      - @posts_by_week.each do |w, posts|
        .wau-period{:id => "people-#{w}"}

          %h3
            People from 
            = @posts_by_week[w].first.created_at.beginning_of_week.strftime("%m/%d")
            to
            - if @posts_by_week[w].first.created_at.end_of_week > Date.today
              = end_of_week = 'present'
            - else
              = end_of_week = @posts_by_week[w].first.created_at.end_of_week.strftime("%m/%d")

          %table.table
            %tr
              %th Last posted
              %th User
              %th # Correct
              %th # Incorrect
              %th # Other
              %th Recent answer
              %th Nudged

              - already_shown_users = []
              - posts.each_with_index do |post, i|
                - next if already_shown_users.include? post.user
                - already_shown_users << post.user

                - row_class = ''
                - if post.user.client_nudge == true
                  - row_class = 'info'
                - elsif post.correct != false and @correct_count_by_user[post.user.id].to_i > 2 and post.user.client_nudge != true
                  - row_class = 'warning'
                %tr.asker-row{:class => row_class}
                  %td= post.created_at.in_time_zone("Eastern Time (US & Canada)").strftime("%m/%d %I:%M %p")
                  %td= link_to "@#{post.user.twi_screen_name}", "http://twitter.com/#{post.user.twi_screen_name}", :target => :blank
                  %td= @correct_count_by_user[post.user.id]
                  %td= @incorrect_count_by_user[post.user.id]
                  %td= @other_posts_count_by_user[post.user.id]
                  %td= (post.correct ? "Correct" : "Incorrect") unless post.correct.nil?
                  %td
                    - unless post.user.client_nudge
                      %a.nudge{:href => '#', :user_id => post.user.id, :asker_id => post.in_reply_to_user_id} Nudge

    #invoice.tab-pane
      - @posts_by_month_by_it.each do |w, posts_by_it|
        - if posts_by_it.values.flatten.first.created_at.end_of_month > Date.today
          - end_of_it = 'present'
          - inc = true
        - else
          - end_of_it = posts_by_it.values.flatten.first.created_at.end_of_month.strftime("%m/%d")
          - inc = false

        .bill{:class => "#{'incomplete' if inc}"}

          %h3{:class => "#{'incomplete' if inc}"}
            = "Activity #{'(incomplete)' if inc} from "
            = posts_by_it.values.flatten.first.created_at.beginning_of_month.strftime("%m/%d")
            to
            = end_of_it

          - dms = cts = 0
          - retweets = posts_by_it[3].count if posts_by_it[3]
          - retweet_rate = @client.rate_sheet.retweet
          - retweet_rate ||= 0
          - retweets ||= 0
          - retweet_rev = retweets * retweet_rate

          - mentions = posts_by_it[2].count if posts_by_it[2]
          - mentions ||= 0
          - mention_rate = @client.rate_sheet.tweet
          - mention_rate ||= 0
          - mention_rev = mentions * mention_rate

          - conversions = 0
          - conversion_rate = @client.rate_sheet.conversion
          - conversion_rate ||= 0
          - conversion_rev = conversions * conversion_rate

          - total = mentions + retweets
          - total_rev = retweet_rev + mention_rev

          %table.table.table-bordered
            %tr
              %th{:style => "width:62%;"}
              %th{:style => "width:13%;"} Quantity
              %th{:style => "width:13%;"} Rate
              %th Total

            %tr
              %td Mentions
              %td= mentions
              %td= sprintf("$%.2f", mention_rate) unless mention_rate.nil?
              %td= sprintf("$%.2f", mention_rev)
            
            %tr
              %td Retweets
              %td= retweets
              %td= sprintf("$%.2f", retweet_rate) unless retweet_rate.nil?
              %td= sprintf("$%.2f", retweet_rev)
            
            %tr
              %td Conversions
              %td= conversions
              %td= sprintf("$%.2f", conversion_rate) unless conversion_rate.nil?
              %td= sprintf("$%.2f", conversion_rev)

            %tr.info
              %td{:colspan => 3} Total
              %td= sprintf("$%.2f", total_rev)



    #account.tab-pane

      %br
      .row
        .span5
          %h3 Information
          .well{:style => "min-height:140px;"}

            %dl.dl-horizontal
              %dt Company
              %dd
                - if current_user.is_role? 'admin'
                  = best_in_place @client.rate_sheet, :title, :type => 'input', :nil => "untitled"
                - else
                  = @client.rate_sheet.title

              %dt Start date
              %dd= @posts.last.created_at.strftime("%D") unless @posts.blank?
              %dt Handles
              %dd
                - @askers.each_with_index do |asker, i|
                  = "@#{asker.twi_screen_name}"
                  = ", " if i < @askers.count - 1

        .span4
          %h3 Pricing

          .well{:style => "min-height:140px;"}
            %dl.dl-horizontal
              - [:tweet, :retweet, :lead, :conversion].each do |unit|
                /%tr
                %dt= "#{unit.to_s.humanize}"
                %dd
                  - if current_user.is_role? 'admin'
                    $
                    = best_in_place @rate_sheet, unit, :type => 'input', :nil => "0.0"
                  - elsif @rate_sheet[unit].nil?
                    $0.00
                  - else
                    = sprintf("$%.2f", @rate_sheet[unit])

              %br
              %dt Monthly cap
              %dd
                - if current_user.is_role? 'admin'
                  $
                  = best_in_place @rate_sheet, :monthly_cap, :type => 'input', :nil => "0.0"
                - elsif @rate_sheet[:monthly_cap].nil?
                  $0.00
                - else
                  = sprintf("$%.2f", @rate_sheet[:monthly_cap])

