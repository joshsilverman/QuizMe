.feed_section
	- now = Time.now
	- @publications.each do |publication|
		- @question_asker = publication.asker
		- @conversation = nil
		- responded = false
		- if @responses[publication.id]
			- correct = (@responses[publication.id].first.posts.where("correct is not null").present? ? @responses[publication.id].first.posts.where("correct is not null").first.correct : nil)
			- @conversation = @responses[publication.id].first
			- responded = true
		.conversation.border-color{:asker_id => @question_asker.id}
			.post.parent{:class => ("answered" if responded), :post_id => publication.id}
				- if first = publication.posts.first
					- if first.created_at < 1.day.ago
						%p.time= time_formatter(first.created_at)
					- else
						%p.time.timeago{:title => first.created_at.to_time.iso8601}
				- if correct.nil?
					%i.answered_indicator{:style => "display: none;"}
				- else
					%i.answered_indicator{:class => (correct ? "icon-ok-sign" : "icon-remove-sign"), :style => ("display: none;" unless responded)}
				- retweeted = (current_user and @actions[publication.id] and @actions[publication.id].select { |a| a[:interaction_type] == 3 and a[:user][:id] == current_user.id}.present?) ? true : false
				%i.icon-retweet{:style => ("display: none;" unless retweeted)}
				.content
					= image_tag(@question_asker.twi_profile_img_url, :class => "rounded")
					- if publication.question.user_id != 1
						- user = publication.question.user
						%i.icon-user
						%a.asker_link{:href => "/feeds/#{@question_asker.id}"}
							%h5= @question_asker.twi_screen_name						
						via
						%a.question_via{:href => "http://twitter.com/#{user.twi_screen_name}", :target => "_blank"}
							%h5= user.twi_screen_name
					- else
						%a.asker_link{:href => "/feeds/#{@question_asker.id}"}
							%h5= @question_asker.twi_screen_name
					%p.question_text= publication.question.text.html_safe
					.post_actions
						%a.expand Answer
						- unless retweeted
							%a.retweet.rollover 
								%i.icon-retweet
								Retweet
				- unless responded
					.answers.rounded.border{:style => "display: none;"}
						- answers = publication.question.answers.shuffle
						- count = answers.size
						- answers.each_with_index do |answer, i|
							%h3{:class => ("bottom_border" if i < (count - 1)), :correct => answer["correct"].to_s, :answer_id => answer.id}= answer.text.html_safe
							.answer_container.input{:type => 'text'}
								.shadow-top
								.tweet
									%span#account= "@#{@question_asker.twi_screen_name}"
									%span#answer= answer.tweetable(@question_asker.twi_screen_name).html_safe
								.answer_controls
									%a.tweet_button.btn.btn-primary{:href => ("/auth/twitter?feed_id=#{@question_asker.id}&post_id=#{publication.id}&answer_id=#{answer.id}" unless current_user)} Tweet!
								.shadow-bottom
			.subsidiaries{:style => "display: none;"}
				- if @conversation
					= render :partial => "conversation"
				.loading{:style => "display: none;"}
					Loading...	
			= render :partial => "activity", :locals => {:post => publication}