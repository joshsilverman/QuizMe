= javascript_include_tag "https://www.google.com/jsapi"
#manager
	#feed_container.span10
		#wrapper.span9
			= render :partial => "account_info"

			#feed.row
				#right_column.span7
					#posts.rounded
						.header.border-color
							%h3
								Activity
								.btn-group
									- unless params[:filter]
										%a.btn.btn-small{:href => "/askers/#{@asker.id}/hide_all/#{@posts.collect(&:id).join('+')}"} Hide all
							
						- asker_collection = User.askers.collect {|a| [a.id, a.twi_screen_name]}
						- unresponded_unlinked_count = unresponded_linked_count = autocorrect_count = 0
						- @engagements.each do |id, post|
							/ quick reply vars
							- if post.conversation and post.conversation.publication and post.conversation.publication.question
								- post.conversation.publication.question.answers
								- correct = post.conversation.publication.question.answers.reject{|a| a.correct != true}[0]
							- elsif post.interaction_type == 4 and @asker.new_user_question
								- correct = @asker.new_user_question.answers.reject{|a| a.correct != true}[0]

							- if !post.autocorrect.nil?
								- autocorrect_count += 1
							- elsif correct.nil? and post.autocorrect.nil?
								- unresponded_unlinked_count += 1
							- elsif !correct.nil? and post.autocorrect.nil?
								- unresponded_linked_count += 1

							- if @autocorrect and !post.autocorrect.nil?
							- elsif @unlinked and correct.nil and post.autocorrect.nil?
							- elsif @linked and !correct.nil? and post.autocorrect.nil?
							- else
								- next

							-# keep if (linked and correct and not autocorrect)

							.conversation.border-color
								.post.parent.answered{:post_id => post.id, :interaction_type => post.interaction_type}
									%p.time= time_formatter(post.created_at)
									#classify
										- if post.autospam
											%i.icon-warning-sign
										%a
											= best_in_place post, :spam, :type => :checkbox, :collection => ["flag", "unflag"]										
									%i.icon-share-alt{:style => "display: none;"}
									.content
										= image_tag(post.user.twi_profile_img_url, :class => "rounded")
										%i{:class => interaction_icon(post.interaction_type)}
										%h5= post.user.twi_screen_name	
										%p= post.text
										
										.post_actions
											%a
												%i.icon-eye-close
												= best_in_place post, :requires_action, :type => :checkbox, :collection => ["show", "hide"]
											|
											- if post.in_reply_to_post_id and post.in_reply_to_user_id == @asker.id	
												%a.link_post 
													%i.icon-wrench
													unlink
											- else 
												%a.link_post 
													%i.icon-wrench
													link
											|
											%a.retweet{:style => "margin-left: 0px;"}
												%i.icon-retweet
												retweet
											|
											%a.mark_ugc
												%i.icon-question-sign
												mark ugc

											/ %a.show_move move
											/ %a.move{:style => "display: none;"}
											/ 	= best_in_place post, :in_reply_to_user_id, :type => :select, :collection => User.askers.collect {|a| [a.id, a.twi_screen_name]}, :display_as => :requires_action

										/ quick reply
										- if correct
											%p
												%a.quick-reply-yes{:class => "#{'icon-arrow-right' if post.autocorrect}"} &nbsp; yes
												|
												%a.quick-reply-no{:class => "#{'icon-arrow-right' if post.autocorrect == false}"} &nbsp; no
												&nbsp;
												%span.quick-reply
													= "(answer: #{correct.text})"

						#posts_more.border-color
							Last Post Reached

				#left_column.span2.hidden-phone
					%ul.nav.nav-tabs.nav-stacked
						/%li{:style => "#{'font-weight:bold;' if @asker.unresponded_count > 0}"}= link_to "All messages (#{@asker.unresponded_count})", '?'
						%li{:style => "#{'font-weight:bold;' if autocorrect_count > 0}", :class => "#{'active' if @autocorrect}"}= link_to "Autocorrect (#{autocorrect_count})", '?'
						%li{:style => "#{'font-weight:bold;' if unresponded_linked_count > 0}", :class => "#{'active' if @linked}"}= link_to "Linked (#{unresponded_linked_count})", '?filter=unlinked'
						%li{:style => "#{'font-weight:bold;' if unresponded_unlinked_count > 0}", :class => "#{'active' if @unlinked}"}= link_to "Unlinked (#{unresponded_unlinked_count})", '?filter=unlinked'
						%li= link_to "Retweets", '?filter=retweets'
						%li= link_to "Spam", '?filter=spam'
						//%li= link_to "Starred", '?filter=starred'

= render :partial => "respond_modal"
= render :partial => "link_post_modal"
= render :partial => "retweet_modal"

#confirm.modal.hide
	.modal-header
		%button.close{:type => "button", "data-dismiss" => "modal", "aria-hidden" => "true"} &times;
		%h3 Confirm
	.modal-body
		Are you sure you want to unlink this post?							
	.modal-footer
		%a.btn{:type => "button", "data-dismiss" => "modal", "aria-hidden" => "true"} Close
		%a#unlink_post.btn.btn-primary Unlink Post

#post_template.conversation.border-color{:style => "display: none;"}
	.post.parent
		%i.icon-share-alt{:style => "display: none;"}
		.content
			= image_tag(@asker.twi_profile_img_url, :class => "rounded")
			%h5= @asker.twi_screen_name
			%p Post content
		.answers.rounded.border{:style => "display: none;"}
	.subsidiaries{:style => "display: none;"}
	.loading{:style => "display: none;"}
		Loading...

#answer_template.answer_container.input{:type => 'text', :style => "display: none;"}
	.shadow-top
	.tweet
		%span#account= "@#{@asker.twi_screen_name}"
		%span#answer= " Answer text"
		%span#url= " URL"
		/ %span#additional{:contenteditable => true}
	.answer_controls
		.tweet_button.btn.btn-primary Tweet!
	.shadow-bottom

#subsidiary_template.post{:style => "display: none;"}
	.content
		= image_tag(@asker.twi_profile_img_url, :class => "rounded")							
		%h5= "User Name"
		%p= "Post content"

= hidden_field_tag :feed_id, @asker.id
= hidden_field_tag :feed_name, @asker.twi_screen_name
= hidden_field_tag :conversations, @conversations.to_json
= hidden_field_tag :engagements, @engagements.to_json
= hidden_field_tag :user_name, current_user.twi_screen_name if current_user
= hidden_field_tag :user_img, current_user.twi_profile_img_url if current_user

= hidden_field_tag :correct_responses, CORRECT.to_json
= hidden_field_tag :correct_complements, COMPLEMENT.to_json
= hidden_field_tag :feed_id, @asker.id
