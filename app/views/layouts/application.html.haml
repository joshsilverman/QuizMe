!!!
%html
  %head
    - title = yield(:title)
    %title= title.blank? ? "Wisr" : "#{h title} | Wisr"
    = stylesheet_link_tag "application"
    = csrf_meta_tags
    %meta{:name => "viewport", :content => "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"}
    %meta{:name => "description", :content => "Wisr teaches anything from Chemistry to Algebra through Twitter/chat/SMS/email. Learn by answering questions in the communication channel where you are most comfortable."}
    = yield(:meta)

  %body
    = render 'drawer/drawer'

    .main-view{:style => ("background: #{@asker.bg_color || '#C4E0EC'} url(/assets/bg_images/#{@asker.bg_image}) no-repeat;" if @asker.try(:bg_image))}
      = render 'layouts/header'
      .container.row
        = yield

    = yield(:modals)
    = yield(:mixpanel_badge) # appears on home page

    - cache("_application_css_js", :expires_in => 1.hour) do
      = javascript_include_tag "application"
      = javascript_include_tag "http://code.jquery.com/jquery-migrate-1.2.1.min.js"
      = render :partial => "layouts/scripts"

    - if Rails.env.test?
      %script
        jQuery.fn._delay = jQuery.fn.delay
        jQuery.fn.delay = function() {
        arguments[0] = 0
        return jQuery.fn._delay.apply(this, arguments);
        };

        jQuery.fn._fadeIn = jQuery.fn.fadeIn
        jQuery.fn.fadeIn = function() {
        arguments[0] = 0
        return jQuery.fn._fadeIn.apply(this, arguments);
        };

        jQuery.fn._fadeOut = jQuery.fn.fadeOut
        jQuery.fn.fadeOut = function() {
        arguments[0] = 0
        return jQuery.fn._fadeOut.apply(this, arguments);
        };

        jQuery.fn._slideToggle = jQuery.fn.slideToggle
        jQuery.fn.slideToggle = function() {
        arguments[0] = 0
        return jQuery.fn._slideToggle.apply(this, arguments);
        };

        jQuery.fn._animateClass = jQuery.fn.animateClass
        jQuery.fn.animateClass = function() {
        arguments[1] = 0
        console.log(arguments);
        return jQuery.fn._animateClass.apply(this, arguments);
        };